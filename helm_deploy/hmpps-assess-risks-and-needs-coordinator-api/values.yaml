generic-service:
  nameOverride: hmpps-assess-risks-and-needs-coordinator-api
  productId: "HMPPS509" # productId for the product that this belongs too, i.e. DPS001, see README.md for details

  replicaCount: 4

  image:
    repository: ghcr.io/ministryofjustice/hmpps-assess-risks-and-needs-coordinator-api
    tag: app_version # override at deployment time
    port: 8080

  ingress:
    enabled: true
    host: app-hostname.local # override per environment
    tlsSecretName: hmpps-assess-risks-and-needs-coordinator-api-cert
    modsecurity_enabled: true
    modsecurity_snippet: |
      SecRuleEngine DetectionOnly
      SecRuleUpdateActionById 949110 "t:none,deny,status:406,logdata:%{SERVER_NAME}"
      SecRuleUpdateActionById 959100 "t:none,deny,status:406,logdata:%{SERVER_NAME}"
      SecAction "id:900000,phase:1,nolog,pass,t:none,setvar:tx.paranoia_level=2"

  # Environment variables to load into the deployment
  env:
    JAVA_OPTS: "-Xmx512m"
    SERVER_PORT: "8080"
    APPLICATIONINSIGHTS_CONNECTION_STRING: "InstrumentationKey=$(APPINSIGHTS_INSTRUMENTATIONKEY)"
    APPLICATIONINSIGHTS_CONFIGURATION_FILE: applicationinsights.json

  # Pre-existing kubernetes secrets to load as environment variables in the deployment.
  # namespace_secrets:
  #   [name of kubernetes secret]:
  #     [name of environment variable as seen by app]: [key of kubernetes secret to load]

  namespace_secrets:
    hmpps-assess-risks-and-needs-coordinator-api:
      APPINSIGHTS_INSTRUMENTATIONKEY: "APPINSIGHTS_INSTRUMENTATIONKEY"
      CLIENT_ID: "COORDINATOR_CLIENT_ID"
      CLIENT_SECRET: "COORDINATOR_CLIENT_SECRET"

    hmpps-assess-risks-and-needs-integrations-rds-instance:
      APP_DB_ENDPOINT: rds_instance_endpoint
      APP_DB_NAME: database_name
      APP_DB_USERNAME: database_username
      APP_DB_PASSWORD: database_password

  allowlist:
    groups:
      - internal
      - prisons

generic-prometheus-alerts:
  targetApplication: hmpps-assess-risks-and-needs-coordinator-api
